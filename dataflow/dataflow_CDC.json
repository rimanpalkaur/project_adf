{
	"name": "dataflow_CDC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable56",
						"type": "DatasetReference"
					},
					"name": "salesorderheadersource"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable57",
						"type": "DatasetReference"
					},
					"name": "Maxdate"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable58",
						"type": "DatasetReference"
					},
					"name": "watermarkvalue"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable59",
						"type": "DatasetReference"
					},
					"name": "lookuptable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable60",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable61",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "split1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> salesorderheadersource",
				"source(output(",
				"          mdate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select max(OrderDate) as mdate from [SalesLT].[SalesOrderHeader]',",
				"     format: 'query') ~> Maxdate",
				"source(output(",
				"          tablename as string,",
				"          watermarkvalue as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select tablename,watermarkvalue from watermarktab where tablename=\\'[SalesLT].[SalesOrderHeader]\\'',",
				"     format: 'query') ~> watermarkvalue",
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          tablename as string,",
				"          watermarkvalue as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> lookuptable",
				"lookuptable select(mapColumn(",
				"          lkpSalesOrderID = SalesOrderID,",
				"          lkpRevisionNumber = RevisionNumber,",
				"          lkpOrderDate = OrderDate,",
				"          lkpDueDate = DueDate,",
				"          lkpShipDate = ShipDate,",
				"          lkpStatus = Status,",
				"          lkpOnlineOrderFlag = OnlineOrderFlag,",
				"          lkpSalesOrderNumber = SalesOrderNumber,",
				"          lkpPurchaseOrderNumber = PurchaseOrderNumber,",
				"          lkpAccountNumber = AccountNumber,",
				"          lkpCustomerID = CustomerID,",
				"          lkpShipToAddressID = ShipToAddressID,",
				"          lkpBillToAddressID = BillToAddressID,",
				"          lkpShipMethod = ShipMethod,",
				"          lkpCreditCardApprovalCode = CreditCardApprovalCode,",
				"          lkpSubTotal = SubTotal,",
				"          lkpTaxAmt = TaxAmt,",
				"          lkpFreight = Freight,",
				"          lkpTotalDue = TotalDue,",
				"          lkpComment = Comment,",
				"          lkprowguid = rowguid,",
				"          lkpModifiedDate = ModifiedDate,",
				"          lkptablename = tablename,",
				"          lkpwatermarkvalue = watermarkvalue",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"salesorderheadersource, Maxdate join(true(),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, watermarkvalue join(true(),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 filter(OrderDate>watermarkvalue && OrderDate<=mdate) ~> filter1",
				"filter1, select1 lookup(SalesOrderID == lkpSalesOrderID,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 split(isNull(lkpSalesOrderID),",
				"     disjoint: false) ~> split1@(newrecord, exists)",
				"split1@exists alterRow(updateIf(true())) ~> alterRow1",
				"split1@newrecord sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          tablename as string,",
				"          watermarkvalue as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SalesOrderID,",
				"          RevisionNumber,",
				"          OrderDate,",
				"          DueDate,",
				"          ShipDate,",
				"          Status,",
				"          OnlineOrderFlag,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber,",
				"          CustomerID,",
				"          ShipToAddressID,",
				"          BillToAddressID,",
				"          ShipMethod,",
				"          CreditCardApprovalCode,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          Comment,",
				"          rowguid,",
				"          ModifiedDate,",
				"          tablename,",
				"          watermarkvalue",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp,",
				"          tablename as string,",
				"          watermarkvalue as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['SalesOrderID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}